<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-21T08:01:40 IST" name="Default suite" finished-at="2023-07-21T08:01:45 IST" duration-ms="4875">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:PlayListRunner.PlayListAPI_Test@e3b3b2f]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2023-07-21T08:01:40 IST" name="Default test" finished-at="2023-07-21T08:01:45 IST" duration-ms="4875">
      <class name="PlayListRunner.PlayListAPI_Test">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:PlayListRunner.PlayListAPI_Test@e3b3b2f]" started-at="2023-07-21T08:01:40 IST" name="setUpClass" finished-at="2023-07-21T08:01:41 IST" duration-ms="580" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7f973a14]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:PlayListRunner.PlayListAPI_Test@e3b3b2f]" started-at="2023-07-21T08:01:41 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-21T08:01:44 IST" duration-ms="2645" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate that User is able to create the PlayList in Spotify using create Play list API"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["PlayList API Testing"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.SecurityException">
            <message>
              <![CDATA[class "org.hamcrest.Matchers"'s signer information does not match signer information of other classes in the same package]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.SecurityException: class "org.hamcrest.Matchers"'s signer information does not match signer information of other classes in the same package
at java.base/java.lang.ClassLoader.checkCerts(ClassLoader.java:1158)
at java.base/java.lang.ClassLoader.preDefineClass(ClassLoader.java:902)
at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1010)
at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)
at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)
at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)
at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)
at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)
at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at StepDefinations.PlayListAPI_Steps.validate_that_user_get_the_status_code_as(PlayListAPI_Steps.java:60)
at âœ½.Validate that user get the status code as 201(file:///D:/Learning/Cucumber/CucumberTestFrameowrk/DesignTest/src/test/java/APITest/Features/SpotifyTestPlayListAPI.feature:6)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.SecurityException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:PlayListRunner.PlayListAPI_Test@e3b3b2f]" started-at="2023-07-21T08:01:44 IST" name="tearDownClass" finished-at="2023-07-21T08:01:45 IST" duration-ms="1589" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- PlayListRunner.PlayListAPI_Test -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
